#!/usr/bin/env python

import rospy
import sys
import serial as serial
from struct import *

# import protocol
from communications import AVIa_tcp
from communications import socket_connections

# import messages to be subscribed to and published
from wave_mapping_msgs.msg import AircraftState

import flight_data_server.message_callbacks as cb_msg

def connect_to_server():
    server_socket = socket_connections.pysock(
      	'10.0.0.12', 
        5005,
        1024)
    server_socket.start_send()
    return server_socket

def send_to_server():
    fdata_server = connect_to_server()
    parser_avia = AVIa_tcp.AVIaTCPParser(fdata_server)
    
    message_callbacks = cb_msg.FlightDataSharingCallbacks(fdata_server)

    rospy.init_node('send_flight_data_to_server')
    sub_ac_state = rospy.Subscriber( '/aircraft_state', AircraftState, 
        message_callbacks.aircraft_state )

    r = rospy.Rate(1)
    while (not rospy.is_shutdown()):
        if not fdata_server.sock.recv(1):
            gcs = connect_to_server()
            parser_avia = AVIa_tcp.AVIaTCPParser( gcs )
        rospy.spin()

if __name__ == '__main__':
    try:
        send_to_server()
    except rospy.ROSInterruptException: pass
